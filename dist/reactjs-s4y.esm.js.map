{"version":3,"file":"reactjs-s4y.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { PureComponent, CSSProperties } from 'react';\n\nfunction getWindow(el: Document) {\n  return el.nodeType === 9 && el.defaultView;\n}\n\nfunction offset(el: Element) {\n  const doc = el?.ownerDocument;\n  const docElem = doc.documentElement;\n  const win: any = getWindow(doc);\n  let box = { top: 0, left: 0 };\n\n  if (!doc) {\n    return {\n      top: 0,\n      left: 0,\n    };\n  }\n\n  if (typeof el.getBoundingClientRect !== typeof undefined) {\n    box = el.getBoundingClientRect();\n  }\n\n  return {\n    top: box.top + win?.pageYOffset - docElem.clientTop,\n    left: box.left + win?.pageXOffset - docElem.clientLeft,\n  };\n}\n\ninterface StickyProps {\n  children: React.ReactNode | ((isSticky: boolean) => React.ReactNode);\n  offsetTop: number;\n  containerSelectorFocus: string;\n  zIndex: number;\n  stickyEnableRange: number[];\n  onChange: (isSticky: boolean) => void;\n}\n\ninterface StickyState {\n  isEnableSticky: boolean;\n  targetHeight: number;\n  innerPosition: string;\n  containerMeasure: Partial<DOMRect>;\n  isLong: boolean;\n  innerTop: number;\n}\n\ntype StickyDefaultProps = Pick<\n  StickyProps,\n  | 'offsetTop'\n  | 'containerSelectorFocus'\n  | 'zIndex'\n  | 'stickyEnableRange'\n  | 'onChange'\n>;\n\nclass Sticky extends PureComponent<StickyProps, StickyState> {\n  private $container!: any;\n  private $inner!: any;\n  private prevScrollY!: number;\n  private isPrevSticky?: boolean;\n\n  public static defaultProps: StickyDefaultProps = {\n    offsetTop: 0,\n    containerSelectorFocus: 'body',\n    zIndex: 10,\n    stickyEnableRange: [0, Infinity],\n    onChange: () => {},\n  };\n\n  public state: StickyState = {\n    isEnableSticky: false,\n    targetHeight: Infinity,\n    innerPosition: 'static',\n    containerMeasure: {},\n    isLong: false,\n    innerTop: 0,\n  };\n\n  public componentDidMount() {\n    window.addEventListener('scroll', this.handleWindowScroll);\n    this.handleWindowResize();\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleWindowScroll);\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  private getContainerSelectorFocus = () => {\n    const { containerSelectorFocus } = this.props;\n    return this.$container.closest(containerSelectorFocus);\n  };\n\n  private handleWindowResize = () => {\n    const { stickyEnableRange } = this.props;\n    const [min, max] = stickyEnableRange;\n    this.setState({\n      isEnableSticky: window.innerWidth >= min && window.innerWidth <= max,\n    });\n  };\n\n  private handleWindowScroll = async () => {\n    const { onChange } = this.props;\n    const { isEnableSticky } = this.state;\n    const isSticky = this.checkSticky();\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    const { innerHeight: windowHeight } = window;\n    if (this.$container && this.$inner && isEnableSticky) {\n      const { clientHeight: innerHeight } = this.$inner;\n      const containerMeasure = this.$container.getBoundingClientRect();\n      const targetHeight = $containerSelectorFocus\n        ? $containerSelectorFocus.clientHeight\n        : Infinity;\n      await this.setState({\n        containerMeasure: {\n          top: containerMeasure.top,\n          left: containerMeasure.left,\n          width: containerMeasure.width,\n          height: innerHeight,\n        },\n        targetHeight,\n        isLong: innerHeight > windowHeight,\n      });\n      if (innerHeight > windowHeight) {\n        this.handleLong();\n      } else {\n        this.handleShort();\n      }\n      if (this.isPrevSticky !== isSticky) {\n        onChange(isSticky);\n      }\n      this.isPrevSticky = isSticky;\n    }\n  };\n\n  private checkWrapBottom = () => {\n    const { offsetTop } = this.props;\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    const { containerMeasure, isLong } = this.state;\n    const targetHeight = $containerSelectorFocus\n      ? $containerSelectorFocus.clientHeight\n      : Infinity;\n    return (\n      (containerMeasure as any)?.top -\n        (containerMeasure as any)?.height +\n        (isLong\n          ? (containerMeasure as any)?.height - window.innerHeight + offsetTop\n          : 0) -\n        offsetTop <\n      targetHeight * -1 -\n        (this.getContainerSelectorFocusOffsetTop() -\n          this.getContainerOffsetTop())\n    );\n  };\n\n  private handleLong = () => {\n    const { scrollY } = window;\n    if (this.prevScrollY > scrollY) {\n      this.handleLongScrollUp(scrollY);\n    } else {\n      this.handleLongScrollDown(scrollY);\n    }\n    this.prevScrollY = scrollY;\n  };\n\n  private getInnerTop = () => {\n    const innerMeasure = this.$inner.getBoundingClientRect();\n    const innerTop = innerMeasure.top || -1;\n    return innerTop;\n  };\n\n  private getInnerOffsetTop = () => {\n    return offset(this.$inner).top;\n  };\n\n  private getContainerOffsetTop = () => {\n    return offset(this.$container).top;\n  };\n\n  private getContainerSelectorFocusOffsetTop = () => {\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    return $containerSelectorFocus ? offset($containerSelectorFocus).top : 0;\n  };\n\n  private getContainerSelectorFocusOffsetBottom = () => {\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    return $containerSelectorFocus\n      ? Math.trunc(\n          offset($containerSelectorFocus).top +\n            $containerSelectorFocus.clientHeight\n        )\n      : 0;\n  };\n\n  private getInnerPositionTop = () => {\n    if (this.$container && this.$inner) {\n      return this.getInnerOffsetTop() - this.getContainerOffsetTop();\n    }\n    return 0;\n  };\n\n  private handleLongScrollUp = async (scrollY: number) => {\n    const { offsetTop } = this.props;\n    const { containerMeasure, innerPosition } = this.state;\n    const isTop = (containerMeasure as any).top > offsetTop;\n    const innerTop = this.getInnerTop();\n    if (isTop) {\n      this.setState({\n        innerPosition: 'static',\n      });\n    } else {\n      if (\n        (containerMeasure as any).top <= innerTop &&\n        (innerPosition === 'fixedBottom' ||\n          (innerPosition === 'absoluteBottom' &&\n            scrollY + window.innerHeight <=\n              this.getContainerSelectorFocusOffsetBottom()))\n      ) {\n        await this.setState({\n          innerPosition: 'absoluteCenter',\n        });\n      }\n      this.setInnerPositionFixedTop();\n    }\n  };\n\n  private setInnerPositionFixedTop = () => {\n    const { offsetTop } = this.props;\n    const { innerPosition } = this.state;\n    const innerTop = this.getInnerTop();\n    this.setState({\n      innerTop: this.getInnerPositionTop(),\n    });\n    if (innerTop >= offsetTop && innerPosition === 'absoluteCenter') {\n      this.setState({\n        innerPosition: 'fixedTop',\n      });\n    }\n  };\n\n  private handleLongScrollDown = (scrollY: number) => {\n    const { containerMeasure, innerPosition } = this.state;\n    const isBottom =\n      Math.trunc(scrollY + window.innerHeight) >=\n      Math.trunc(this.getInnerOffsetTop() + (containerMeasure as any).height);\n    const isWrapBottom = this.checkWrapBottom();\n    if (innerPosition === 'fixedTop') {\n      this.setState({\n        innerPosition: 'absoluteCenter',\n      });\n    }\n    if (isWrapBottom) {\n      this.setState({\n        innerPosition: 'absoluteBottom',\n      });\n    } else if (isBottom) {\n      this.setState({\n        innerPosition: 'fixedBottom',\n        innerTop: this.getInnerPositionTop(),\n      });\n    }\n  };\n\n  private getShortPosition = (\n    containerMeasure: StickyState['containerMeasure']\n  ) => {\n    const { offsetTop } = this.props;\n    if ((containerMeasure as any).top <= offsetTop) {\n      if (this.checkWrapBottom()) {\n        return 'absoluteBottom';\n      }\n      return 'fixedTop';\n    }\n    return 'static';\n  };\n\n  private handleShort = () => {\n    const { containerMeasure } = this.state;\n    this.setState({\n      innerPosition: this.getShortPosition(containerMeasure),\n    });\n  };\n\n  private getInnerStyle = (): CSSProperties => {\n    const { offsetTop, zIndex } = this.props;\n    const {\n      targetHeight,\n      innerPosition,\n      containerMeasure,\n      isLong,\n      innerTop,\n    } = this.state;\n    const topForAbsoluteBottom =\n      targetHeight -\n      (containerMeasure as any).height +\n      (this.getContainerSelectorFocusOffsetTop() -\n        this.getContainerOffsetTop());\n    if (isLong) {\n      switch (innerPosition) {\n        case 'static':\n          return {};\n        case 'fixedTop':\n          return {\n            position: 'fixed',\n            top: offsetTop,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        case 'absoluteCenter':\n          return {\n            position: 'absolute',\n            top: innerTop,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        case 'absoluteBottom':\n          return {\n            position: 'absolute',\n            top: topForAbsoluteBottom,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        case 'fixedBottom':\n          return {\n            position: 'fixed',\n            bottom: 0,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        default:\n          return {};\n      }\n    }\n    switch (innerPosition) {\n      case 'static':\n        return {};\n      case 'absoluteBottom':\n        return {\n          position: 'absolute',\n          top: topForAbsoluteBottom,\n          width: containerMeasure.width,\n          zIndex,\n        };\n      case 'fixedTop':\n        return {\n          position: 'fixed',\n          top: offsetTop,\n          width: containerMeasure.width,\n          zIndex,\n        };\n      default:\n        return {};\n    }\n  };\n\n  private getContainerStyle = (): CSSProperties => {\n    const { innerPosition, containerMeasure } = this.state;\n    if (innerPosition === 'static') {\n      return {\n        minHeight: containerMeasure.height,\n      };\n    }\n    return {\n      position: 'relative',\n      minHeight: containerMeasure.height,\n    };\n  };\n\n  private checkSticky = () => {\n    const { innerPosition } = this.state;\n    return innerPosition.search(/fixedTop|fixedBottom/g) !== -1;\n  };\n\n  private setContainerRef = (c: any) => {\n    this.$container = c;\n  };\n\n  private setInnerRef = (c: any) => {\n    this.$inner = c;\n  };\n\n  private renderHackGetHeightWhenInnerContentMargin = () => {\n    return <div style={{ fontSize: 0, visibility: 'hidden' }}>.</div>;\n  };\n\n  private renderChildren = () => {\n    const { children } = this.props;\n    const isSticky = this.checkSticky();\n    return typeof children === 'function' ? children(isSticky) : children;\n  };\n\n  public render() {\n    const { isEnableSticky } = this.state;\n    const containerStyle = isEnableSticky ? this.getContainerStyle() : {};\n    const innerStyle = isEnableSticky ? this.getInnerStyle() : {};\n    return (\n      <div ref={this.setContainerRef} style={containerStyle}>\n        <div ref={this.setInnerRef} style={innerStyle}>\n          {this.renderHackGetHeightWhenInnerContentMargin()}\n          {this.renderChildren()}\n          {this.renderHackGetHeightWhenInnerContentMargin()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sticky;\n"],"names":["getWindow","el","nodeType","defaultView","offset","doc","ownerDocument","docElem","documentElement","win","box","top","left","getBoundingClientRect","undefined","pageYOffset","clientTop","pageXOffset","clientLeft","Sticky","isEnableSticky","targetHeight","Infinity","innerPosition","containerMeasure","isLong","innerTop","containerSelectorFocus","props","$container","closest","stickyEnableRange","min","max","setState","window","innerWidth","onChange","state","isSticky","checkSticky","$containerSelectorFocus","getContainerSelectorFocus","windowHeight","innerHeight","$inner","clientHeight","width","height","handleLong","handleShort","isPrevSticky","offsetTop","getContainerSelectorFocusOffsetTop","getContainerOffsetTop","scrollY","prevScrollY","handleLongScrollUp","handleLongScrollDown","innerMeasure","Math","trunc","getInnerOffsetTop","isTop","getInnerTop","getContainerSelectorFocusOffsetBottom","setInnerPositionFixedTop","getInnerPositionTop","isBottom","isWrapBottom","checkWrapBottom","getShortPosition","zIndex","topForAbsoluteBottom","position","bottom","minHeight","search","c","React","style","fontSize","visibility","children","componentDidMount","addEventListener","handleWindowScroll","handleWindowResize","componentWillUnmount","removeEventListener","render","containerStyle","getContainerStyle","innerStyle","getInnerStyle","ref","setContainerRef","setInnerRef","renderHackGetHeightWhenInnerContentMargin","renderChildren","PureComponent"],"mappings":"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"}