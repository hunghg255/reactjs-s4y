{"version":3,"file":"reactjs-s4y.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { PureComponent, CSSProperties } from 'react';\n\nfunction getWindow(el: Document) {\n  return el.nodeType === 9 && el.defaultView;\n}\n\nfunction offset(el: Element) {\n  const doc = el?.ownerDocument;\n  const docElem = doc.documentElement;\n  const win: any = getWindow(doc);\n  let box = { top: 0, left: 0 };\n\n  if (!doc) {\n    return {\n      top: 0,\n      left: 0,\n    };\n  }\n\n  if (typeof el.getBoundingClientRect !== typeof undefined) {\n    box = el.getBoundingClientRect();\n  }\n\n  return {\n    top: box.top + win?.pageYOffset - docElem.clientTop,\n    left: box.left + win?.pageXOffset - docElem.clientLeft,\n  };\n}\n\ninterface StickyProps {\n  children: React.ReactNode | ((isSticky: boolean) => React.ReactNode);\n  offsetTop: number;\n  containerSelectorFocus: string;\n  zIndex: number;\n  stickyEnableRange: number[];\n  onChange: (isSticky: boolean) => void;\n}\n\ninterface StickyState {\n  isEnableSticky: boolean;\n  targetHeight: number;\n  innerPosition: string;\n  containerMeasure: Partial<DOMRect>;\n  isLong: boolean;\n  innerTop: number;\n}\n\ntype StickyDefaultProps = Pick<\n  StickyProps,\n  | 'offsetTop'\n  | 'containerSelectorFocus'\n  | 'zIndex'\n  | 'stickyEnableRange'\n  | 'onChange'\n>;\n\nclass Sticky extends PureComponent<StickyProps, StickyState> {\n  private $container!: any;\n  private $inner!: any;\n  private prevScrollY!: number;\n  private isPrevSticky?: boolean;\n\n  public static defaultProps: StickyDefaultProps = {\n    offsetTop: 0,\n    containerSelectorFocus: 'body',\n    zIndex: 10,\n    stickyEnableRange: [0, Infinity],\n    onChange: () => {},\n  };\n\n  public state: StickyState = {\n    isEnableSticky: false,\n    targetHeight: Infinity,\n    innerPosition: 'static',\n    containerMeasure: {},\n    isLong: false,\n    innerTop: 0,\n  };\n\n  public componentDidMount() {\n    window.addEventListener('scroll', this.handleWindowScroll);\n    this.handleWindowResize();\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleWindowScroll);\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  private getContainerSelectorFocus = () => {\n    const { containerSelectorFocus } = this.props;\n    return this.$container.closest(containerSelectorFocus);\n  };\n\n  private handleWindowResize = () => {\n    const { stickyEnableRange } = this.props;\n    const [min, max] = stickyEnableRange;\n    this.setState({\n      isEnableSticky: window.innerWidth >= min && window.innerWidth <= max,\n    });\n  };\n\n  private handleWindowScroll = async () => {\n    const { onChange } = this.props;\n    const { isEnableSticky } = this.state;\n    const isSticky = this.checkSticky();\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    const { innerHeight: windowHeight } = window;\n    if (this.$container && this.$inner && isEnableSticky) {\n      const { clientHeight: innerHeight } = this.$inner;\n      const containerMeasure = this.$container.getBoundingClientRect();\n      const targetHeight = $containerSelectorFocus\n        ? $containerSelectorFocus.clientHeight\n        : Infinity;\n      await this.setState({\n        containerMeasure: {\n          top: containerMeasure.top,\n          left: containerMeasure.left,\n          width: containerMeasure.width,\n          height: innerHeight,\n        },\n        targetHeight,\n        isLong: innerHeight > windowHeight,\n      });\n      if (innerHeight > windowHeight) {\n        this.handleLong();\n      } else {\n        this.handleShort();\n      }\n      if (this.isPrevSticky !== isSticky) {\n        onChange(isSticky);\n      }\n      this.isPrevSticky = isSticky;\n    }\n  };\n\n  private checkWrapBottom = () => {\n    const { offsetTop } = this.props;\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    const { containerMeasure, isLong } = this.state;\n    const targetHeight = $containerSelectorFocus\n      ? $containerSelectorFocus.clientHeight\n      : Infinity;\n    return (\n      (containerMeasure as any)?.top -\n        (containerMeasure as any)?.height +\n        (isLong\n          ? (containerMeasure as any)?.height - window.innerHeight + offsetTop\n          : 0) -\n        offsetTop <\n      targetHeight * -1 -\n        (this.getContainerSelectorFocusOffsetTop() -\n          this.getContainerOffsetTop())\n    );\n  };\n\n  private handleLong = () => {\n    const { scrollY } = window;\n    if (this.prevScrollY > scrollY) {\n      this.handleLongScrollUp(scrollY);\n    } else {\n      this.handleLongScrollDown(scrollY);\n    }\n    this.prevScrollY = scrollY;\n  };\n\n  private getInnerTop = () => {\n    const innerMeasure = this.$inner.getBoundingClientRect();\n    const innerTop = innerMeasure.top || -1;\n    return innerTop;\n  };\n\n  private getInnerOffsetTop = () => {\n    return offset(this.$inner).top;\n  };\n\n  private getContainerOffsetTop = () => {\n    return offset(this.$container).top;\n  };\n\n  private getContainerSelectorFocusOffsetTop = () => {\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    return $containerSelectorFocus ? offset($containerSelectorFocus).top : 0;\n  };\n\n  private getContainerSelectorFocusOffsetBottom = () => {\n    const $containerSelectorFocus = this.getContainerSelectorFocus();\n    return $containerSelectorFocus\n      ? Math.trunc(\n          offset($containerSelectorFocus).top +\n            $containerSelectorFocus.clientHeight\n        )\n      : 0;\n  };\n\n  private getInnerPositionTop = () => {\n    if (this.$container && this.$inner) {\n      return this.getInnerOffsetTop() - this.getContainerOffsetTop();\n    }\n    return 0;\n  };\n\n  private handleLongScrollUp = async (scrollY: number) => {\n    const { offsetTop } = this.props;\n    const { containerMeasure, innerPosition } = this.state;\n    const isTop = (containerMeasure as any).top > offsetTop;\n    const innerTop = this.getInnerTop();\n    if (isTop) {\n      this.setState({\n        innerPosition: 'static',\n      });\n    } else {\n      if (\n        (containerMeasure as any).top <= innerTop &&\n        (innerPosition === 'fixedBottom' ||\n          (innerPosition === 'absoluteBottom' &&\n            scrollY + window.innerHeight <=\n              this.getContainerSelectorFocusOffsetBottom()))\n      ) {\n        await this.setState({\n          innerPosition: 'absoluteCenter',\n        });\n      }\n      this.setInnerPositionFixedTop();\n    }\n  };\n\n  private setInnerPositionFixedTop = () => {\n    const { offsetTop } = this.props;\n    const { innerPosition } = this.state;\n    const innerTop = this.getInnerTop();\n    this.setState({\n      innerTop: this.getInnerPositionTop(),\n    });\n    if (innerTop >= offsetTop && innerPosition === 'absoluteCenter') {\n      this.setState({\n        innerPosition: 'fixedTop',\n      });\n    }\n  };\n\n  private handleLongScrollDown = (scrollY: number) => {\n    const { containerMeasure, innerPosition } = this.state;\n    const isBottom =\n      Math.trunc(scrollY + window.innerHeight) >=\n      Math.trunc(this.getInnerOffsetTop() + (containerMeasure as any).height);\n    const isWrapBottom = this.checkWrapBottom();\n    if (innerPosition === 'fixedTop') {\n      this.setState({\n        innerPosition: 'absoluteCenter',\n      });\n    }\n    if (isWrapBottom) {\n      this.setState({\n        innerPosition: 'absoluteBottom',\n      });\n    } else if (isBottom) {\n      this.setState({\n        innerPosition: 'fixedBottom',\n        innerTop: this.getInnerPositionTop(),\n      });\n    }\n  };\n\n  private getShortPosition = (\n    containerMeasure: StickyState['containerMeasure']\n  ) => {\n    const { offsetTop } = this.props;\n    if ((containerMeasure as any).top <= offsetTop) {\n      if (this.checkWrapBottom()) {\n        return 'absoluteBottom';\n      }\n      return 'fixedTop';\n    }\n    return 'static';\n  };\n\n  private handleShort = () => {\n    const { containerMeasure } = this.state;\n    this.setState({\n      innerPosition: this.getShortPosition(containerMeasure),\n    });\n  };\n\n  private getInnerStyle = (): CSSProperties => {\n    const { offsetTop, zIndex } = this.props;\n    const {\n      targetHeight,\n      innerPosition,\n      containerMeasure,\n      isLong,\n      innerTop,\n    } = this.state;\n    const topForAbsoluteBottom =\n      targetHeight -\n      (containerMeasure as any).height +\n      (this.getContainerSelectorFocusOffsetTop() -\n        this.getContainerOffsetTop());\n    if (isLong) {\n      switch (innerPosition) {\n        case 'static':\n          return {};\n        case 'fixedTop':\n          return {\n            position: 'fixed',\n            top: offsetTop,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        case 'absoluteCenter':\n          return {\n            position: 'absolute',\n            top: innerTop,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        case 'absoluteBottom':\n          return {\n            position: 'absolute',\n            top: topForAbsoluteBottom,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        case 'fixedBottom':\n          return {\n            position: 'fixed',\n            bottom: 0,\n            width: containerMeasure.width,\n            zIndex,\n          };\n        default:\n          return {};\n      }\n    }\n    switch (innerPosition) {\n      case 'static':\n        return {};\n      case 'absoluteBottom':\n        return {\n          position: 'absolute',\n          top: topForAbsoluteBottom,\n          width: containerMeasure.width,\n          zIndex,\n        };\n      case 'fixedTop':\n        return {\n          position: 'fixed',\n          top: offsetTop,\n          width: containerMeasure.width,\n          zIndex,\n        };\n      default:\n        return {};\n    }\n  };\n\n  private getContainerStyle = (): CSSProperties => {\n    const { innerPosition, containerMeasure } = this.state;\n    if (innerPosition === 'static') {\n      return {\n        minHeight: containerMeasure.height,\n      };\n    }\n    return {\n      position: 'relative',\n      minHeight: containerMeasure.height,\n    };\n  };\n\n  private checkSticky = () => {\n    const { innerPosition } = this.state;\n    return innerPosition.search(/fixedTop|fixedBottom/g) !== -1;\n  };\n\n  private setContainerRef = (c: any) => {\n    this.$container = c;\n  };\n\n  private setInnerRef = (c: any) => {\n    this.$inner = c;\n  };\n\n  private renderHackGetHeightWhenInnerContentMargin = () => {\n    return <div style={{ fontSize: 0, visibility: 'hidden' }}>.</div>;\n  };\n\n  private renderChildren = () => {\n    const { children } = this.props;\n    const isSticky = this.checkSticky();\n    return typeof children === 'function' ? children(isSticky) : children;\n  };\n\n  public render() {\n    const { isEnableSticky } = this.state;\n    const containerStyle = isEnableSticky ? this.getContainerStyle() : {};\n    const innerStyle = isEnableSticky ? this.getInnerStyle() : {};\n    return (\n      <div ref={this.setContainerRef} style={containerStyle}>\n        <div ref={this.setInnerRef} style={innerStyle}>\n          {this.renderHackGetHeightWhenInnerContentMargin()}\n          {this.renderChildren()}\n          {this.renderHackGetHeightWhenInnerContentMargin()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sticky;\n"],"names":["offset","el","doc","ownerDocument","docElem","documentElement","win","nodeType","defaultView","getWindow","box","top","left","getBoundingClientRect","pageYOffset","clientTop","pageXOffset","clientLeft","Sticky","_PureComponent","isEnableSticky","targetHeight","Infinity","innerPosition","containerMeasure","isLong","innerTop","_this","$container","closest","props","containerSelectorFocus","stickyEnableRange","setState","window","innerWidth","_asyncToGenerator","_regeneratorRuntime","mark","_callee","onChange","isSticky","$containerSelectorFocus","_window","windowHeight","innerHeight","wrap","_context","prev","next","state","checkSticky","getContainerSelectorFocus","$inner","clientHeight","width","height","handleLong","handleShort","isPrevSticky","stop","offsetTop","_this$state","getContainerSelectorFocusOffsetTop","getContainerOffsetTop","scrollY","prevScrollY","handleLongScrollUp","handleLongScrollDown","Math","trunc","getInnerOffsetTop","_ref2","_callee2","_this$state2","isTop","_context2","getInnerTop","getContainerSelectorFocusOffsetBottom","setInnerPositionFixedTop","_x","apply","arguments","getInnerPositionTop","_this$state3","isBottom","isWrapBottom","checkWrapBottom","getShortPosition","_this$props","zIndex","_this$state4","topForAbsoluteBottom","position","bottom","_this$state5","minHeight","search","c","React","style","fontSize","visibility","children","_proto","prototype","componentDidMount","addEventListener","this","handleWindowScroll","handleWindowResize","componentWillUnmount","removeEventListener","render","containerStyle","getContainerStyle","innerStyle","getInnerStyle","ref","setContainerRef","setInnerRef","renderHackGetHeightWhenInnerContentMargin","renderChildren","PureComponent"],"mappings":"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"}